// ---------------------------------------------------------------
// A first demonstration of the Recursive World Language (RWL)
//  Defines a corridor-like square closed loop
//
//  Author: Jose Luis Blanco Claraco, Oct 25 2011.
// ---------------------------------------------------------------

// Description of the language:
//  - Comments (like these) start with a C style comment "//"
//  - Multi-line comments (/* ... */) are not allowed.
//  - The central component of RWL programs are "lists", sequenecs of 
//     primitives and calls to other lists. 
//  - A list is always declared as:
//      LIST <NAME>
//        <primitives>
//      ENDLIST
//  - The entrance point is always a list named "main"
//

LIST random_LM_room
	LM_RANDOM 0 10 -5 5 -3 3
ENDLIST

LIST random_LM_corridor
	LM_RANDOM 0 35 -2 2 -1.5 1.5
ENDLIST

LIST room
	CALL *150 random_LM_room
	
	X+= 9
	PITCH+= 1
	NODE
ENDLIST

LIST corridor
	CALL *90 random_LM_corridor
	
	PITCH+= -1
	X+= 35
	NODE
ENDLIST

LIST long_corridor
	CALL room
	CALL corridor
	CALL room
	CALL corridor
ENDLIST

LIST main
	// At the origin there is always a "node", there is no need to 
	//  manually create it.
	RANDOMIZE 123
	CALL long_corridor
	YAW+= 45
	CALL long_corridor
	YAW+= 45
	CALL long_corridor
	YAW+= 45
	CALL long_corridor
	YAW+= 45
	CALL long_corridor
	YAW+= 45
	CALL long_corridor
	YAW+= 45
	CALL long_corridor
	YAW+= 45
	CALL long_corridor
	YAW+= 45
	CALL long_corridor
	YAW+= 45
	CALL long_corridor
	YAW+= 45
ENDLIST
